 Dokumentacja końcowa
 Tomasz Jakubczyk
 7. Podsumowanie:
Opis wyniesionych doświadczeń z realizacji projektu.
Po pierwsze lepiej dobierać współpracowników.
Zwykle ten obowiązek spada na head hunterów, a przynajmniej
można zobaczyć CV. Niestety, osoby preferowane na członków projektu
postanowiły nie zapisać się na przedmiot TIN. Nie uzyskałem też zgody na
realizowanie projektu w mniejszym zespole, co niewątpliwie dało by lepszy efekt.
Bardzo zauważalny okazał się brak środków nacisku na członków zespołu.
Niektórzy członkowie mimo napomnień odkładali pisanie projektu, a na końcu
zamiast wzić się w garść i zarwać trzy noce odpuścili sobie zupełnie.
Być może częściowo ponosi za to winę okres świteczyny, zalew kolokwiami i
innymi projektami przez czas trwania projektu od prezentacji wstępnej do terminu oddania.
Być może jeśli cały projekt byłby zadany już w pierwszym lub drugim tygodniu semestru,
kiedy jest jeszcze dużo czasu i termin oddania byłby gdzieś w pierwszej połowie semestru,
przebieg projektu byłby zgoła inny. Nie widzę też żadnego dobrego uzasadnienia,
czemu tak by nie miało być, bo wiedzę potrzebną do zakodowania aplikacji
albo w większościjuż posiadaliśmy, albo i tak musieliśmy doczytac bezpośrednio
ze źródeł (internetu).
Problemem okazało się też zbyt mało precyzyjne opisanie szczegółów implementacji
portokołu w dokumentacji wstępnej. Uważam, że opis pól komunikatów był
niewystarczający. Powinniśmy byli napisać jak dokładnie będziemy wykożystywać
gniazda, z pewnością oszczędziło by to wiele czasu przy próbach integracji
modółów aplikacji.
Okazało się, że niektórzy członkowie mają skłonność do żadkiego commitowania
soich postępów na githuba, co utrudniało kontrolę sytuacji. Przydało by się
jakieś oprogramowanie do podglądania, czym właśnie zajmują się członkowie zespołu.
Niezwykle przydatny okazał się komunikator Skype w fazie integracji i debgowania
aplikacji. Pozwoliło to szybko zorientować się w sytuacji co do projektu i
nakierować tok prac na właściwe tory.
Dla odmiany Facebook nie okazał się zbyt dobrym sposobem komunikacji, chociaż
mogło to wynikać z tego którzy członkowie zespołu wykożystywali go do komunikacji.
Komunkacja przez Facebooka prowadziął często do tego, że pytania bądź polecenia
pozostawały bez odpowiedzi. Może być to też związane ze zbyt dużym natłokiem
informacji na Facebooku.
Zauwżalna była duża rozbierzność w umiejętnościach programistycznych członków
zespołu. Jest to zapewne związane z tym, że program studiów informatyki na
Wydziale Elektoniki Politechiki Warszwskiej przewiduje stanowczo za mało
godzin poswięconym nauce jezyków programowania.
Testowanie regresyjne oraz integracyjne powinno być przeprowadzane co najmniej raz w tygodniu,
niestety, niektórzy członkowie aż do końca projektu nie napisali nic co mogło
by się do tego nadawać.
Sądzę, że wprowadziliśmy zbyt rozbudowaną strukturę logiczną projektu, który
tego na prawdę nie wymagał i przez to nie starczyło czasu na pełne zrealizowanie
projektu. Jeśłi projekt zostałby napisany strukturalnie w jezyku c przez jedną
osobę, to wyszło by to dużo prościej, dużo szybciej, zostały by zrealizowane
wszystkie założenia projeltowe i debigowanie okazało by się dużo prostrze.
Ubolewamy, też nad tym, że nie udało się napisać pluginu wiresharka do podglądania
komunikacji sięciowej, jednak w naszym przypadku dużo by nie pomógł i uznaliśmy,
że w zbyt ogranicznym czasie potrzeba zająć się raczej usuwaniem błędów
krytycznych wywołania progrmu.
W ostanich dniach projektu byliśmy o krok od uzyskania działającego jednocześnie
IPv4 i IPv6, jednak zabrakło na to czasu i w ogromie innych problemów musieliśmy
zadowolić się działającym IPv4. Gdyby na początku projektu klasa Ip nie była
by klasą wirtualną po której dziedziczą Ipv4 i Ipv6, to niewątpliwie to by się nam
udało. Niestety na chwilę obecną Ipv6 jest tylko częściowo zrealizowane w kodzie.
Już tydzień przed końcem projektu zorientowaliśmy się, że raczej nie ma szans
na realizacje synchronizacj zegarów przez pobranie z serwera NTP, niemniej
został napisany kod do protokołu który może bez problemu obsługiwać tą opcję.
Okazało sie też, że i tak testujemy naszą aplikację w jednym środowisku i
sens tego jest znikomy.
